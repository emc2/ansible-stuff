include         {{ ldap_config_dir }}/schema/core.schema
include         {{ ldap_config_dir }}/schema/cosine.schema
include         {{ ldap_config_dir }}/schema/inetorgperson.schema
include         {{ ldap_config_dir }}/schema/jabberd.schema
include         {{ ldap_config_dir }}/schema/nis.schema
include         {{ ldap_config_dir }}/schema/postfix.schema
include         {{ ldap_config_dir }}/schema/dnszone.schema
include         {{ ldap_config_dir }}/schema/automount.schema

pidfile         {{ slapd_run }}/slapd.pid
argsfile        {{ slapd_run }}/slapd.args

modulepath      {{ slapd_modules }}
moduleload      back_mdb

database        mdb
suffix          "{{ ldap_base_dn }}"
directory       {{ slapd_data }}

index           objectClass             eq
index           uid                     eq
index           memberUid               eq
index           mail                    eq
index           uidNumber               eq
index           gidNumber               eq
index           jabberID                eq
index           cn                      eq
index           member                  eq
index           automountKey            eq
index           automountMapName        eq

TLSVerifyClient         try
TLSCertificateFile      {{ slapd_cert }}
TLSCertificateKeyFile   {{ slapd_key }}
TLSCACertificateFile    {{ ssl_ca_cert }}
#TLSCRLFile              {{ ssl_ca_crl }}
#TLSCRLCheck             all

include {{ slapd_access }}

# Translate authentication into LDAP users

authz-policy from

# Translate admin/admin into the LDAP admin user

authz-regexp "uid=admin/admin,cn={{ kerberos_realm }},cn=gssapi,cn=auth" "cn=admin,{{ ldap_base_dn }}"
authz-regexp "uid=admin/admin,cn={{ kerberos_realm }},cn=gss-spnego,cn=auth" "cn=admin,{{ ldap_base_dn }}"

# Translate host and service credentials into entries in hosts

authz-regexp "uid=host/([^,]+).{{ kerberos_realm }},cn={{ network_name }},cn=gssapi,cn=auth" "cn=$1.{{ network_name }},{{ ldap_hosts_dn }}"
authz-regexp "uid=host/([^,]+).{{ kerberos_realm }},cn={{ network_name }},cn=gss-spnego,cn=auth" "cn=$1.{{ network_name }},{{ ldap_hosts_dn }}"
authz-regexp "uid=([^/,]+)/([^/\.,]+).{{ kerberos_realm }},cn={{ network_name}},cn=gssapi,cn=auth" "cn=$1,cn=$2.{{ network_name }},{{ ldap_hosts_dn }}"
authz-regexp "uid=([^/,]+)/([^/\.,]+).{{ kerberos_realm }},cn={{ network_name }},cn=gss-spnego,cn=auth" "cn=$1,cn=$2.{{ network_name }},{{ ldap_hosts_dn }}"

# Translate users into entries in people

authz-regexp "uid=([^/.,]+),cn={{ kerberos_realm }},cn=gssapi,cn=auth" "cn=$1,{{ ldap_users_dn }}"
authz-regexp "uid=([^/.,]+),cn={{ kerberos_realm }},cn=gss-spnego,cn=auth" "cn=$1,{{ ldap_users_dn }}"

# Translate host certs into entries in hosts

authz-regexp "cn=([^/\.,]+).{{ network_name }},ou=hosts,o={{ network_name }}" "cn=$1.{{ network_name }},{{ ldap_hosts_dn }}"

# Translate user certs into entries in people

authz-regexp "cn=([^/,]+),ou=people,o={{ network_name }}" "cn=$1,{{ ldap_users_dn }}"

sasl-host       {{ ansible_fqdn }}
sasl-realm      {{ kerberos_realm }}
sasl-secprops   noplain,noanonymous

